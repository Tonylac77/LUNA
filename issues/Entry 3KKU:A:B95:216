Entry used:

    entry_str = "3KKU:A:B95:216"
    entries.append(CompoundEntry.from_string(entry_str))

When I ran LUNA for this entry, I found an issue caused by Open Babel during the addition of hydrogens to the molecule 3KKU:A:Z22:217. Since Open Babel is not deterministic, i.e., each run may place the hydrogen in a different position, and since the molecule 3KKU:A:Z22:217 contains just two atoms and therefore many degrees of freedom, Open Babel can add the hydrogens in many different positions.

As a consequence, weak hydrogen bonds and hydrogen bonds may appear depending on where the hydrogen was added. For Water and other solvents that contains just one atom, I've solved the problem by checking out if that atom only contains hydrogens as a neighbor. However, I didn't expect something like it to happen with a molecule with more than one atom and that's why the tool is not able to deal with such a situation.

Given that, I need to find a way to always generate the same position to the hydrogens, or at least consider all possible positions of them.

