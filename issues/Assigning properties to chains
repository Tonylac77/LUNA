Due to the number of residues in a chain, the function _assign_properties() in the groups.py is taking too much time to process. That happens because this function process regions around each residue (file conversion, standardization, fix molecules, etc), which clearly creates a bottleneck in LUNA.

In the past, I've created a standardized function that applies default properties to atoms from residues to reduce processing time, but since I've made some changes in the code, right now that function is deprecated and for that reason I removed it. The main problem in this function was due to the Neighborhood graph, which does not exist anymore, and due to the AtomData objects that now requires the definition of a BondType. Thus, I still need to create a default list of atom bonds for residues before I return this function back to LUNA.

While I don't return that function back, I have a bottleneck with the _assign_function() to be solved. The processing time of a whole chain is very slow and can take around 2 minutes by chain, which is impracticable.

The main reason for this function to be so slow is because I tried to make the processing of each residue to be the most accurate as possible. Since Open Babel generates errors when converting the whole PDB, in the past, I decided to convert and process each molecule separately. But, by that time, I didn't have a special function to standardize and fix molecules. So, maybe now I could try to make the conversion, standardization of molecules to be done only once at a time. That could help reduce the processing time, but I need to perform a thorough test to evaluate if the molecular structures won't break in some way.