-- MySQL Script generated by MySQL Workbench
-- Qua 20 Jun 2018 22:56:07 -03
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema napoli2
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `napoli2` ;

-- -----------------------------------------------------
-- Schema napoli2
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `napoli2` DEFAULT CHARACTER SET utf8 ;
USE `napoli2` ;

-- -----------------------------------------------------
-- Table `napoli2`.`country`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`country` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`country` (
  `code` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`code`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`user` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`user` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(50) NULL,
  `last_name` VARCHAR(50) NULL,
  `email` VARCHAR(255) NULL,
  `pw_hash` VARCHAR(255) NULL,
  `affiliation` VARCHAR(255) NULL,
  `is_admin` TINYINT(1) NULL,
  `country_code` INT UNSIGNED NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_country1_idx` (`country_code` ASC),
  CONSTRAINT `fk_user_country1`
    FOREIGN KEY (`country_code`)
    REFERENCES `napoli2`.`country` (`code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`status` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`status` (
  `id` TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(20) NULL,
  `css_style` VARCHAR(50) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`project_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`project_type` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`project_type` (
  `id` TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NULL,
  `days_available` INT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`project`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`project` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`project` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `job_code` VARCHAR(45) NULL,
  `project_type_id` TINYINT UNSIGNED NOT NULL,
  `user_id` INT UNSIGNED NULL,
  `status_id` TINYINT UNSIGNED NOT NULL,
  `start_date` VARCHAR(45) NULL,
  `end_date` VARCHAR(45) NULL,
  `is_fixed` TINYINT(1) NULL,
  `description` TEXT NULL,
  `progress_perc` DECIMAL(5,2) UNSIGNED NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `job_code_UNIQUE` (`job_code` ASC),
  INDEX `fk_project_user1_idx` (`user_id` ASC),
  INDEX `fk_project_status1_idx` (`status_id` ASC),
  INDEX `fk_project_project_type1_idx` (`project_type_id` ASC),
  CONSTRAINT `fk_project_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `napoli2`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_project_status1`
    FOREIGN KEY (`status_id`)
    REFERENCES `napoli2`.`status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_project_project_type1`
    FOREIGN KEY (`project_type_id`)
    REFERENCES `napoli2`.`project_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`compose_dataset_proj`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`compose_dataset_proj` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`compose_dataset_proj` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `project_id` INT UNSIGNED NOT NULL,
  `searched_pdb_id` CHAR(4) NULL,
  `searched_chain_id` CHAR(1) NULL,
  `identity` DECIMAL(5,2) UNSIGNED NULL,
  `search_tool` ENUM('BLAST', 'FASTA') NULL,
  `mask` TINYINT(1) NULL,
  `evalue` DECIMAL(5,2) UNSIGNED NULL,
  `nbh_cutoff` DECIMAL(4,2) NULL,
  `min_num_hvy_atm` TINYINT UNSIGNED NULL,
  `artifacts` TEXT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_compose_dataset_proj_project1_idx` (`project_id` ASC),
  CONSTRAINT `fk_compose_dataset_proj_project1`
    FOREIGN KEY (`project_id`)
    REFERENCES `napoli2`.`project` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`inter_proj`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`inter_proj` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`inter_proj` (
  `project_id` INT UNSIGNED NOT NULL,
  `has_submitted_files` TINYINT(1) NULL,
  `pdb_template` VARCHAR(255) NULL,
  `chain_template` CHAR(1) NULL,
  `ph` VARCHAR(45) NULL,
  `atom_prop_file` VARCHAR(255) NULL,
  `compose_dataset_proj_id` INT UNSIGNED NULL,
  `fp_func` VARCHAR(45) NULL,
  `similarity_func` VARCHAR(45) NULL,
  `add_hydrogen` TINYINT(1) NULL DEFAULT 1,
  PRIMARY KEY (`project_id`),
  UNIQUE INDEX `atom_prop_file_UNIQUE` (`atom_prop_file` ASC),
  INDEX `fk_inter_proj_project1_idx` (`project_id` ASC),
  INDEX `fk_inter_proj_compose_dataset_proj1_idx` (`compose_dataset_proj_id` ASC),
  CONSTRAINT `fk_inter_proj_project1`
    FOREIGN KEY (`project_id`)
    REFERENCES `napoli2`.`project` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_inter_proj_compose_dataset_proj1`
    FOREIGN KEY (`compose_dataset_proj_id`)
    REFERENCES `napoli2`.`compose_dataset_proj` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`ligand_entry`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`ligand_entry` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`ligand_entry` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `inter_proj_project_id` INT UNSIGNED NOT NULL,
  `pdb_id` VARCHAR(255) NOT NULL,
  `chain_id` CHAR(1) NOT NULL,
  `lig_name` CHAR(3) NULL,
  `lig_num` INT NULL,
  `lig_icode` CHAR(1) NULL,
  `cluster` INT NULL,
  `status_id` TINYINT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`, `inter_proj_project_id`),
  INDEX `fk_complex_status1_idx` (`status_id` ASC),
  INDEX `fk_ligand_entry_inter_proj1_idx` (`inter_proj_project_id` ASC),
  CONSTRAINT `fk_complex_status1`
    FOREIGN KEY (`status_id`)
    REFERENCES `napoli2`.`status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ligand_entry_inter_proj1`
    FOREIGN KEY (`inter_proj_project_id`)
    REFERENCES `napoli2`.`inter_proj` (`project_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`inter_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`inter_type` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`inter_type` (
  `id` TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`group`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`group` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`group` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `comp_pdb_id` VARCHAR(255) NULL,
  `comp_chain_id` CHAR(1) NULL,
  `comp_name` VARCHAR(3) NULL,
  `comp_num` INT NULL,
  `comp_icode` CHAR(1) NULL,
  `name` VARCHAR(45) NULL,
  `coord_x` DECIMAL(8,3) NULL,
  `coord_y` DECIMAL(8,3) NULL,
  `coord_z` DECIMAL(8,3) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'A group consists of 1 or more atoms, as well as an atom can participate to many groups.\n\nExample: a +charged Nitrogen in an aromatic ring participates in two groups: one aromatic group and one charged group.';


-- -----------------------------------------------------
-- Table `napoli2`.`interaction`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`interaction` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`interaction` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `group_id1` INT UNSIGNED NOT NULL,
  `group_id2` INT UNSIGNED NOT NULL,
  `inter_type_id` TINYINT UNSIGNED NOT NULL,
  `da_dist_hb_inter` DECIMAL(3,2) NULL,
  `ha_dist_hb_inter` DECIMAL(3,2) NULL,
  `dha_ang_hb_inter` DECIMAL(5,2) NULL,
  `dist_repuls_inter` DECIMAL(3,2) NULL,
  `dist_attract_inter` DECIMAL(3,2) NULL,
  `cc_dist_pi_pi_inter` DECIMAL(3,2) NULL,
  `dihed_ang_pi_pi_inter` DECIMAL(5,2) NULL,
  `disp_ang_pi_pi_inter` DECIMAL(5,2) NULL,
  `dist_hydrop_inter` DECIMAL(3,2) NULL,
  `xa_dist_xbond_inter` DECIMAL(3,2) NULL,
  `xc_dist_xbond_inter` DECIMAL(3,2) NULL,
  `cxa_ang_xbond_inter` DECIMAL(5,2) NULL,
  `xar_ang_xbond_inter` DECIMAL(5,2) NULL,
  `disp_ang_xbond_inter` DECIMAL(5,2) NULL,
  `dist_cation_pi_inter` DECIMAL(3,2) NULL,
  `cov_dist` DECIMAL(3,2) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_interaction_inter_type1_idx` (`inter_type_id` ASC),
  INDEX `fk_interaction_group1_idx` (`group_id1` ASC),
  INDEX `fk_interaction_group2_idx` (`group_id2` ASC),
  CONSTRAINT `fk_interaction_inter_type1`
    FOREIGN KEY (`inter_type_id`)
    REFERENCES `napoli2`.`inter_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_interaction_group1`
    FOREIGN KEY (`group_id1`)
    REFERENCES `napoli2`.`group` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_interaction_group2`
    FOREIGN KEY (`group_id2`)
    REFERENCES `napoli2`.`group` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Each interaction has a type and involves two groups of atoms.\nAn interaction to be established also requires a set of distance and angle criterias.\nSuch values are kept to help in filtering data according to the user necessity.\n\nSome interactions belongs to a PDB obtained from the RCSB.org. In such cases, the interaction was calculated using the \ndefault parameters for pH and atom types. When an uses modifies these parameters or submit a new PDB file, the field \npdb_id would be empty, indicating the interaction is according to a user definition.';


-- -----------------------------------------------------
-- Table `napoli2`.`atom`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`atom` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`atom` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` CHAR(4) NULL,
  `serial_number` INT NULL,
  `altloc` CHAR(1) NULL,
  `element` CHAR(1) NULL,
  `coord_x` DECIMAL(8,3) NULL,
  `coord_y` DECIMAL(8,3) NULL,
  `coord_z` DECIMAL(8,3) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`proj_step`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`proj_step` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`proj_step` (
  `id` TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `project_type_id` TINYINT UNSIGNED NOT NULL,
  `sequence` TINYINT UNSIGNED NULL,
  `description` VARCHAR(350) NULL,
  `is_critical` TINYINT(1) NULL,
  `is_parallelizable` TINYINT(1) NULL,
  PRIMARY KEY (`id`, `project_type_id`),
  INDEX `fk_proj_step_project_type1_idx` (`project_type_id` ASC),
  CONSTRAINT `fk_proj_step_project_type1`
    FOREIGN KEY (`project_type_id`)
    REFERENCES `napoli2`.`project_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`proj_step_detail`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`proj_step_detail` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`proj_step_detail` (
  `project_id` INT UNSIGNED NOT NULL,
  `proj_step_id` TINYINT UNSIGNED NOT NULL,
  `status_id` TINYINT UNSIGNED NOT NULL,
  `warning` VARCHAR(350) NULL,
  `progress_perc` DECIMAL(5,2) UNSIGNED NULL DEFAULT 0,
  PRIMARY KEY (`project_id`, `proj_step_id`),
  INDEX `fk_proj_step_has_inter_proj_proj_step1_idx` (`proj_step_id` ASC),
  INDEX `fk_inter_proj_step_detail_status1_idx` (`status_id` ASC),
  INDEX `fk_proj_step_detail_project1_idx` (`project_id` ASC),
  CONSTRAINT `fk_proj_step_has_inter_proj_proj_step1`
    FOREIGN KEY (`proj_step_id`)
    REFERENCES `napoli2`.`proj_step` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_inter_proj_step_detail_status1`
    FOREIGN KEY (`status_id`)
    REFERENCES `napoli2`.`status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_proj_step_detail_project1`
    FOREIGN KEY (`project_id`)
    REFERENCES `napoli2`.`project` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`proj_step_message`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`proj_step_message` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`proj_step_message` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `project_id` INT UNSIGNED NOT NULL,
  `proj_step_id` TINYINT UNSIGNED NOT NULL,
  `status_id` TINYINT UNSIGNED NOT NULL,
  `message` VARCHAR(350) NULL,
  `is_critical` TINYINT(1) NULL,
  PRIMARY KEY (`id`, `project_id`, `proj_step_id`),
  INDEX `fk_proc_detail_message_status1_idx` (`status_id` ASC),
  INDEX `fk_proj_step_message_proj_step_detail1_idx` (`project_id` ASC, `proj_step_id` ASC),
  CONSTRAINT `fk_proc_detail_message_status1`
    FOREIGN KEY (`status_id`)
    REFERENCES `napoli2`.`status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_proj_step_message_proj_step_detail1`
    FOREIGN KEY (`project_id` , `proj_step_id`)
    REFERENCES `napoli2`.`proj_step_detail` (`project_id` , `proj_step_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`field_study`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`field_study` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`field_study` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`user_field_study`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`user_field_study` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`user_field_study` (
  `user_id` INT UNSIGNED NOT NULL,
  `field_study_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`user_id`, `field_study_id`),
  INDEX `fk_user_has_field_study_field_study1_idx` (`field_study_id` ASC),
  INDEX `fk_user_has_field_study_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_field_study_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `napoli2`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_field_study_field_study1`
    FOREIGN KEY (`field_study_id`)
    REFERENCES `napoli2`.`field_study` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`inter_criteria`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`inter_criteria` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`inter_criteria` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `inter_proj_project_id` INT UNSIGNED NOT NULL,
  `max_da_dist_hb_inter` DECIMAL(3,2) NULL,
  `max_ha_dist_hb_inter` DECIMAL(3,2) NULL,
  `min_dha_ang_hb_inter` DECIMAL(5,2) NULL,
  `min_dist_repuls_inter` DECIMAL(3,2) NULL,
  `max_dist_repuls_inter` DECIMAL(3,2) NULL,
  `min_dist_attract_inter` DECIMAL(3,2) NULL,
  `max_dist_attract_inter` DECIMAL(3,2) NULL,
  `max_cc_dist_pi_pi_inter` DECIMAL(3,2) NULL,
  `min_dihed_ang_pi_pi_inter` DECIMAL(5,2) NULL,
  `max_disp_ang_pi_pi_inter` DECIMAL(5,2) NULL,
  `min_dist_hydrop_inter` DECIMAL(3,2) NULL,
  `max_dist_hydrop_inter` DECIMAL(3,2) NULL,
  `max_xa_dist_xbond_inter` DECIMAL(3,2) NULL,
  `max_xc_dist_xbond_inter` DECIMAL(3,2) NULL,
  `min_cxa_ang_xbond_inter` DECIMAL(5,2) NULL,
  `min_xar_ang_xbond_inter` DECIMAL(5,2) NULL,
  `max_disp_ang_xbond_inter` DECIMAL(5,2) NULL,
  `min_dist_cation_pi_inter` DECIMAL(3,2) NULL,
  `max_dist_cation_pi_inter` DECIMAL(3,2) NULL,
  `boundary_cutoff` DECIMAL(3,2) NULL,
  `cov_dist_tolerance` DECIMAL(3,2) NULL,
  PRIMARY KEY (`id`, `inter_proj_project_id`),
  INDEX `fk_inter_criteria_inter_proj1_idx` (`inter_proj_project_id` ASC),
  CONSTRAINT `fk_inter_criteria_inter_proj1`
    FOREIGN KEY (`inter_proj_project_id`)
    REFERENCES `napoli2`.`inter_proj` (`project_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'An user can change the interaction criterias';


-- -----------------------------------------------------
-- Table `napoli2`.`university`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`university` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`university` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`inter_viewer_conf`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`inter_viewer_conf` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`inter_viewer_conf` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `inter_proj_project_id` INT UNSIGNED NOT NULL,
  `file` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`, `inter_proj_project_id`),
  INDEX `fk_inter_viewer_conf_pli_analysis_proj1_idx` (`inter_proj_project_id` ASC),
  CONSTRAINT `fk_inter_viewer_conf_pli_analysis_proj1`
    FOREIGN KEY (`inter_proj_project_id`)
    REFERENCES `napoli2`.`inter_proj` (`project_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`group_atom`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`group_atom` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`group_atom` (
  `group_id` INT UNSIGNED NOT NULL,
  `atom_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`group_id`, `atom_id`),
  INDEX `fk_group_has_atom_atom1_idx` (`atom_id` ASC),
  INDEX `fk_group_has_atom_group1_idx` (`group_id` ASC),
  CONSTRAINT `fk_group_has_atom_group1`
    FOREIGN KEY (`group_id`)
    REFERENCES `napoli2`.`group` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_group_has_atom_atom1`
    FOREIGN KEY (`atom_id`)
    REFERENCES `napoli2`.`atom` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`inter_depend_inter`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`inter_depend_inter` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`inter_depend_inter` (
  `interaction_id1` INT UNSIGNED NOT NULL,
  `interaction_id2` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`interaction_id1`, `interaction_id2`),
  INDEX `fk_interaction_has_interaction_interaction2_idx` (`interaction_id2` ASC),
  INDEX `fk_interaction_has_interaction_interaction1_idx` (`interaction_id1` ASC),
  CONSTRAINT `fk_interaction_has_interaction_interaction1`
    FOREIGN KEY (`interaction_id1`)
    REFERENCES `napoli2`.`interaction` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_interaction_has_interaction_interaction2`
    FOREIGN KEY (`interaction_id2`)
    REFERENCES `napoli2`.`interaction` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Some interactions depend on other interactions to occur. \n\nFor example, a \'water bridged hydrogen bond\' depends on two hydrogen bonds to occur: \none between the protein and the water, and other between the ligand and the water.\nSo, when we say that a protein and a ligand establish such interaction, it doesn\'t mean that\nthere is a direct interaction between this two molecules. Actually, it is a simplification and indicates\nimplicitly that there are at least two hydrogen bonds.\n';


-- -----------------------------------------------------
-- Table `napoli2`.`compose_dataset_entry`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`compose_dataset_entry` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`compose_dataset_entry` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `compose_dataset_proj_id` INT UNSIGNED NOT NULL,
  `status_id` TINYINT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_recovered_pdb_status1_idx` (`status_id` ASC),
  INDEX `fk_entry_compose_dataset_proj1_idx` (`compose_dataset_proj_id` ASC),
  CONSTRAINT `fk_recovered_pdb_status1`
    FOREIGN KEY (`status_id`)
    REFERENCES `napoli2`.`status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_entry_compose_dataset_proj1`
    FOREIGN KEY (`compose_dataset_proj_id`)
    REFERENCES `napoli2`.`compose_dataset_proj` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`ci_session`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`ci_session` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`ci_session` (
  `id` VARCHAR(128) NOT NULL,
  `ip_address` VARCHAR(45) NOT NULL,
  `timestamp` INT(10) UNSIGNED NOT NULL DEFAULT 0,
  `data` BLOB NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `ci_sessions_timestamp` (`timestamp` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`compound_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`compound_type` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`compound_type` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`interacting_res_by_cluster`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`interacting_res_by_cluster` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`interacting_res_by_cluster` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `inter_proj_project_id` INT UNSIGNED NOT NULL,
  `cluster` TINYINT UNSIGNED NULL,
  `resname` CHAR(3) NULL,
  `resnum` INT NULL,
  `resicode` CHAR(1) NULL,
  `inter_residue_id` INT UNSIGNED NULL,
  `num_lig_hb_inter` INT UNSIGNED NOT NULL DEFAULT 0,
  `num_lig_hbw_inter` INT UNSIGNED NOT NULL DEFAULT 0,
  `num_lig_hydrop_inter` INT UNSIGNED NOT NULL DEFAULT 0,
  `num_lig_repuls_inter` INT UNSIGNED NOT NULL DEFAULT 0,
  `num_lig_attract_inter` INT UNSIGNED NOT NULL DEFAULT 0,
  `num_lig_xbond_inter` INT UNSIGNED NOT NULL DEFAULT 0,
  `num_lig_pi_cation_inter` INT UNSIGNED NOT NULL DEFAULT 0,
  `num_lig_pi_pi_inter` INT UNSIGNED NOT NULL DEFAULT 0,
  `num_lig_salt_bdg_inter` INT UNSIGNED NOT NULL DEFAULT 0,
  `total_num_lig` INT UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`, `inter_proj_project_id`),
  INDEX `fk_inter_residue_inter_residue1_idx` (`inter_residue_id` ASC),
  INDEX `fk_interacting_res_by_cluster_pli_analysis_proj1_idx` (`inter_proj_project_id` ASC),
  CONSTRAINT `fk_inter_residue_inter_residue1`
    FOREIGN KEY (`inter_residue_id`)
    REFERENCES `napoli2`.`interacting_res_by_cluster` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_interacting_res_by_cluster_pli_analysis_proj1`
    FOREIGN KEY (`inter_proj_project_id`)
    REFERENCES `napoli2`.`inter_proj` (`project_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`compound`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`compound` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`compound` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `pdb_id` VARCHAR(3) NULL,
  `zinc_id` VARCHAR(45) NULL,
  `num_heavy_atoms` VARCHAR(45) NULL,
  `name` TEXT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `ligand_id_UNIQUE` (`pdb_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`fp_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`fp_type` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`fp_type` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`ligand_fp`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`ligand_fp` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`ligand_fp` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `compound_id` INT UNSIGNED NOT NULL,
  `bits` VARCHAR(255) NULL,
  `fp_type_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_ligand_fp_compound1_idx` (`compound_id` ASC),
  INDEX `fk_ligand_fp_fp_type1_idx` (`fp_type_id` ASC),
  CONSTRAINT `fk_ligand_fp_compound1`
    FOREIGN KEY (`compound_id`)
    REFERENCES `napoli2`.`compound` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ligand_fp_fp_type1`
    FOREIGN KEY (`fp_type_id`)
    REFERENCES `napoli2`.`fp_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`ligand_found`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`ligand_found` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`ligand_found` (
  `compose_dataset_proj_id` INT UNSIGNED NOT NULL,
  `ligand_id` INT UNSIGNED NOT NULL,
  `is_art_crystal` TINYINT(1) NULL,
  `region_num` INT UNSIGNED NULL,
  PRIMARY KEY (`compose_dataset_proj_id`, `ligand_id`),
  INDEX `fk_compose_dataset_proj_has_ligand_compose_dataset_proj1_idx` (`compose_dataset_proj_id` ASC),
  CONSTRAINT `fk_compose_dataset_proj_has_ligand_compose_dataset_proj1`
    FOREIGN KEY (`compose_dataset_proj_id`)
    REFERENCES `napoli2`.`compose_dataset_proj` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`pdb_chain`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`pdb_chain` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`pdb_chain` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `pdb_id` VARCHAR(255) NULL,
  `chain` CHAR(1) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`res_belongs_to`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`res_belongs_to` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`res_belongs_to` (
  `interacting_res_id` INT UNSIGNED NOT NULL,
  `pdb_chain_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`interacting_res_id`, `pdb_chain_id`),
  INDEX `fk_interacting_res_has_pdb_chain_pdb_chain1_idx` (`pdb_chain_id` ASC),
  INDEX `fk_interacting_res_has_pdb_chain_interacting_res1_idx` (`interacting_res_id` ASC),
  CONSTRAINT `fk_interacting_res_has_pdb_chain_interacting_res1`
    FOREIGN KEY (`interacting_res_id`)
    REFERENCES `napoli2`.`interacting_res_by_cluster` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_interacting_res_has_pdb_chain_pdb_chain1`
    FOREIGN KEY (`pdb_chain_id`)
    REFERENCES `napoli2`.`pdb_chain` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`comp_type_freq_by_cluster`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`comp_type_freq_by_cluster` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`comp_type_freq_by_cluster` (
  `inter_proj_id` INT UNSIGNED NOT NULL,
  `compound_type_id` INT UNSIGNED NOT NULL,
  `cluster` INT NOT NULL,
  `total_num_group` INT UNSIGNED NULL,
  `total_num_lig` INT UNSIGNED NULL,
  PRIMARY KEY (`inter_proj_id`, `compound_type_id`, `cluster`),
  INDEX `fk_group_freq_by_cluster_compound_type1_idx` (`compound_type_id` ASC),
  INDEX `fk_group_freq_by_cluster_inter_proj1_idx` (`inter_proj_id` ASC),
  CONSTRAINT `fk_group_freq_by_cluster_compound_type1`
    FOREIGN KEY (`compound_type_id`)
    REFERENCES `napoli2`.`compound_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_group_freq_by_cluster_inter_proj1`
    FOREIGN KEY (`inter_proj_id`)
    REFERENCES `napoli2`.`inter_proj` (`project_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`inter_type_freq_by_cluster`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`inter_type_freq_by_cluster` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`inter_type_freq_by_cluster` (
  `inter_proj_id` INT UNSIGNED NOT NULL,
  `inter_type_id` TINYINT UNSIGNED NOT NULL,
  `cluster` INT NOT NULL,
  `total_num_inter` INT UNSIGNED NULL,
  `total_num_lig` INT UNSIGNED NULL,
  PRIMARY KEY (`inter_proj_id`, `inter_type_id`, `cluster`),
  INDEX `fk_inter_freq_by_cluster_inter_type1_idx` (`inter_type_id` ASC),
  INDEX `fk_inter_freq_by_cluster_inter_proj1_idx` (`inter_proj_id` ASC),
  CONSTRAINT `fk_inter_freq_by_cluster_inter_type1`
    FOREIGN KEY (`inter_type_id`)
    REFERENCES `napoli2`.`inter_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_inter_freq_by_cluster_inter_proj1`
    FOREIGN KEY (`inter_proj_id`)
    REFERENCES `napoli2`.`inter_proj` (`project_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`group_compound_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`group_compound_type` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`group_compound_type` (
  `compound_type_id` INT UNSIGNED NOT NULL,
  `group_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`compound_type_id`, `group_id`),
  INDEX `fk_compound_type_has_group_group1_idx` (`group_id` ASC),
  INDEX `fk_compound_type_has_group_compound_type1_idx` (`compound_type_id` ASC),
  CONSTRAINT `fk_compound_type_has_group_compound_type1`
    FOREIGN KEY (`compound_type_id`)
    REFERENCES `napoli2`.`compound_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_compound_type_has_group_group1`
    FOREIGN KEY (`group_id`)
    REFERENCES `napoli2`.`group` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`comp_type_count`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`comp_type_count` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`comp_type_count` (
  `ligand_entry_id` INT UNSIGNED NOT NULL,
  `inter_proj_id` INT UNSIGNED NOT NULL,
  `compound_type_id` INT UNSIGNED NOT NULL,
  `total` INT UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`ligand_entry_id`, `inter_proj_id`, `compound_type_id`),
  INDEX `fk_comp_type_count_compound_type1_idx` (`compound_type_id` ASC),
  INDEX `fk_comp_type_count_ligand_entry1_idx` (`ligand_entry_id` ASC, `inter_proj_id` ASC),
  CONSTRAINT `fk_comp_type_count_compound_type1`
    FOREIGN KEY (`compound_type_id`)
    REFERENCES `napoli2`.`compound_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comp_type_count_ligand_entry1`
    FOREIGN KEY (`ligand_entry_id`)
    REFERENCES `napoli2`.`ligand_entry` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`inter_type_count`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`inter_type_count` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`inter_type_count` (
  `ligand_entry_id` INT UNSIGNED NOT NULL,
  `inter_proj_id` INT UNSIGNED NOT NULL,
  `inter_type_id` TINYINT UNSIGNED NOT NULL,
  `total` INT NULL DEFAULT 0,
  PRIMARY KEY (`ligand_entry_id`, `inter_proj_id`, `inter_type_id`),
  INDEX `fk_inter_type_count_inter_type1_idx` (`inter_type_id` ASC),
  INDEX `fk_inter_type_count_ligand_entry1_idx` (`ligand_entry_id` ASC, `inter_proj_id` ASC),
  CONSTRAINT `fk_inter_type_count_inter_type1`
    FOREIGN KEY (`inter_type_id`)
    REFERENCES `napoli2`.`inter_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_inter_type_count_ligand_entry1`
    FOREIGN KEY (`ligand_entry_id`)
    REFERENCES `napoli2`.`ligand_entry` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`experimental_tech`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`experimental_tech` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`experimental_tech` (
  `id` TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`structure`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`structure` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`structure` (
  `pdb_id` CHAR(4) NOT NULL,
  `last_update` TIMESTAMP NULL,
  `status_id` TINYINT UNSIGNED NULL,
  `experimental_tech_id` TINYINT UNSIGNED NOT NULL,
  PRIMARY KEY (`pdb_id`),
  INDEX `fk_pdb_status1_idx` (`status_id` ASC),
  INDEX `fk_structure_experimental_tech1_idx` (`experimental_tech_id` ASC),
  CONSTRAINT `fk_pdb_status1`
    FOREIGN KEY (`status_id`)
    REFERENCES `napoli2`.`status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_structure_experimental_tech1`
    FOREIGN KEY (`experimental_tech_id`)
    REFERENCES `napoli2`.`experimental_tech` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`macromol_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`macromol_type` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`macromol_type` (
  `id` TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`macromolecule`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`macromolecule` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`macromolecule` (
  `pdb_id` CHAR(4) NOT NULL,
  `chain_id` CHAR(1) NOT NULL,
  `chain_type_id` TINYINT UNSIGNED NOT NULL,
  PRIMARY KEY (`pdb_id`, `chain_id`),
  INDEX `fk_chain_pdb1_idx` (`pdb_id` ASC),
  INDEX `fk_chain_chain_type1_idx` (`chain_type_id` ASC),
  CONSTRAINT `fk_chain_pdb1`
    FOREIGN KEY (`pdb_id`)
    REFERENCES `napoli2`.`structure` (`pdb_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_chain_chain_type1`
    FOREIGN KEY (`chain_type_id`)
    REFERENCES `napoli2`.`macromol_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`ligand`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`ligand` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`ligand` (
  `pdb_id` CHAR(4) NOT NULL,
  `chain_id` CHAR(1) NOT NULL,
  `lig_name` VARCHAR(3) NOT NULL,
  `lig_num` INT UNSIGNED NOT NULL,
  `lig_icode` CHAR(1) NOT NULL DEFAULT ' ',
  `compound_id` INT UNSIGNED NULL,
  `status_id` TINYINT UNSIGNED NOT NULL,
  PRIMARY KEY (`pdb_id`, `chain_id`, `lig_name`, `lig_num`, `lig_icode`),
  INDEX `fk_ligand_pdb1_idx` (`pdb_id` ASC),
  INDEX `fk_ligand_compound1_idx` (`compound_id` ASC),
  INDEX `fk_ligand_status1_idx` (`status_id` ASC),
  CONSTRAINT `fk_ligand_pdb1`
    FOREIGN KEY (`pdb_id`)
    REFERENCES `napoli2`.`structure` (`pdb_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ligand_compound1`
    FOREIGN KEY (`compound_id`)
    REFERENCES `napoli2`.`compound` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ligand_status1`
    FOREIGN KEY (`status_id`)
    REFERENCES `napoli2`.`status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`ligand_entry_has_interactions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`ligand_entry_has_interactions` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`ligand_entry_has_interactions` (
  `ligand_entry_id` INT UNSIGNED NOT NULL,
  `interaction_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`ligand_entry_id`, `interaction_id`),
  INDEX `fk_ligand_entry_has_interaction_interaction1_idx` (`interaction_id` ASC),
  INDEX `fk_ligand_entry_has_interaction_ligand_entry1_idx` (`ligand_entry_id` ASC),
  CONSTRAINT `fk_ligand_entry_has_interaction_ligand_entry1`
    FOREIGN KEY (`ligand_entry_id`)
    REFERENCES `napoli2`.`ligand_entry` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ligand_entry_has_interaction_interaction1`
    FOREIGN KEY (`interaction_id`)
    REFERENCES `napoli2`.`interaction` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`ligand_establish_interaction`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`ligand_establish_interaction` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`ligand_establish_interaction` (
  `ligand_pdb_id` CHAR(4) NOT NULL,
  `ligand_chain_id` CHAR(1) NOT NULL,
  `ligand_lig_name` VARCHAR(3) NOT NULL,
  `ligand_lig_num` INT UNSIGNED NOT NULL,
  `ligand_lig_icode` CHAR(1) NOT NULL,
  `interaction_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`ligand_pdb_id`, `ligand_chain_id`, `ligand_lig_name`, `ligand_lig_num`, `ligand_lig_icode`, `interaction_id`),
  INDEX `fk_ligand_has_interaction_interaction1_idx` (`interaction_id` ASC),
  INDEX `fk_ligand_has_interaction_ligand1_idx` (`ligand_pdb_id` ASC, `ligand_chain_id` ASC, `ligand_lig_name` ASC, `ligand_lig_num` ASC, `ligand_lig_icode` ASC),
  CONSTRAINT `fk_ligand_has_interaction_ligand1`
    FOREIGN KEY (`ligand_pdb_id` , `ligand_chain_id` , `ligand_lig_name` , `ligand_lig_num` , `ligand_lig_icode`)
    REFERENCES `napoli2`.`ligand` (`pdb_id` , `chain_id` , `lig_name` , `lig_num` , `lig_icode`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ligand_has_interaction_interaction1`
    FOREIGN KEY (`interaction_id`)
    REFERENCES `napoli2`.`interaction` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `napoli2`.`lig_entry_has_step_msg`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `napoli2`.`lig_entry_has_step_msg` ;

CREATE TABLE IF NOT EXISTS `napoli2`.`lig_entry_has_step_msg` (
  `ligand_entry_id` INT UNSIGNED NOT NULL,
  `ligand_entry_inter_proj_id` INT UNSIGNED NOT NULL,
  `proc_step_message_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`ligand_entry_id`, `ligand_entry_inter_proj_id`, `proc_step_message_id`),
  INDEX `fk_ligand_entry_has_proc_detail_message_proc_detail_message_idx` (`proc_step_message_id` ASC),
  INDEX `fk_ligand_entry_has_proc_detail_message_ligand_entry1_idx` (`ligand_entry_id` ASC, `ligand_entry_inter_proj_id` ASC),
  CONSTRAINT `fk_ligand_entry_has_proc_detail_message_ligand_entry1`
    FOREIGN KEY (`ligand_entry_id` , `ligand_entry_inter_proj_id`)
    REFERENCES `napoli2`.`ligand_entry` (`id` , `inter_proj_project_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ligand_entry_has_proc_detail_message_proc_detail_message1`
    FOREIGN KEY (`proc_step_message_id`)
    REFERENCES `napoli2`.`proj_step_message` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `napoli2`.`status`
-- -----------------------------------------------------
START TRANSACTION;
USE `napoli2`;
INSERT INTO `napoli2`.`status` (`id`, `name`, `css_style`) VALUES (1, 'DONE', NULL);
INSERT INTO `napoli2`.`status` (`id`, `name`, `css_style`) VALUES (2, 'OK', NULL);
INSERT INTO `napoli2`.`status` (`id`, `name`, `css_style`) VALUES (3, 'RUNNING', NULL);
INSERT INTO `napoli2`.`status` (`id`, `name`, `css_style`) VALUES (4, 'ERROR', NULL);
INSERT INTO `napoli2`.`status` (`id`, `name`, `css_style`) VALUES (5, 'AWAITING', NULL);
INSERT INTO `napoli2`.`status` (`id`, `name`, `css_style`) VALUES (6, 'READY', NULL);
INSERT INTO `napoli2`.`status` (`id`, `name`, `css_style`) VALUES (7, 'OBSOLETE', NULL);
INSERT INTO `napoli2`.`status` (`id`, `name`, `css_style`) VALUES (8, 'UPDATED', NULL);
INSERT INTO `napoli2`.`status` (`id`, `name`, `css_style`) VALUES (9, 'INVALID', NULL);
INSERT INTO `napoli2`.`status` (`id`, `name`, `css_style`) VALUES (10, 'AVAILABLE', NULL);
INSERT INTO `napoli2`.`status` (`id`, `name`, `css_style`) VALUES (11, 'REMOVED', NULL);
INSERT INTO `napoli2`.`status` (`id`, `name`, `css_style`) VALUES (12, 'FAILED', NULL);
INSERT INTO `napoli2`.`status` (`id`, `name`, `css_style`) VALUES (13, 'WARNING', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `napoli2`.`project_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `napoli2`;
INSERT INTO `napoli2`.`project_type` (`id`, `type`, `days_available`) VALUES (1, 'PLI analysis', 20);
INSERT INTO `napoli2`.`project_type` (`id`, `type`, `days_available`) VALUES (2, 'FSM+PLI analysis', 20);
INSERT INTO `napoli2`.`project_type` (`id`, `type`, `days_available`) VALUES (3, 'New dataset creation', 7);

COMMIT;


-- -----------------------------------------------------
-- Data for table `napoli2`.`project`
-- -----------------------------------------------------
START TRANSACTION;
USE `napoli2`;
INSERT INTO `napoli2`.`project` (`id`, `job_code`, `project_type_id`, `user_id`, `status_id`, `start_date`, `end_date`, `is_fixed`, `description`, `progress_perc`) VALUES (1, 'projetoteste', 1, NULL, 6, NULL, NULL, NULL, NULL, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `napoli2`.`inter_proj`
-- -----------------------------------------------------
START TRANSACTION;
USE `napoli2`;
INSERT INTO `napoli2`.`inter_proj` (`project_id`, `has_submitted_files`, `pdb_template`, `chain_template`, `ph`, `atom_prop_file`, `compose_dataset_proj_id`, `fp_func`, `similarity_func`, `add_hydrogen`) VALUES (1, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `napoli2`.`ligand_entry`
-- -----------------------------------------------------
START TRANSACTION;
USE `napoli2`;
INSERT INTO `napoli2`.`ligand_entry` (`id`, `inter_proj_project_id`, `pdb_id`, `chain_id`, `lig_name`, `lig_num`, `lig_icode`, `cluster`, `status_id`) VALUES (1, 1, '3QQK', 'A', 'X02', 497, NULL, NULL, 10);
INSERT INTO `napoli2`.`ligand_entry` (`id`, `inter_proj_project_id`, `pdb_id`, `chain_id`, `lig_name`, `lig_num`, `lig_icode`, `cluster`, `status_id`) VALUES (2, 1, '3QL8', 'A', 'X01', 300, NULL, NULL, 10);
INSERT INTO `napoli2`.`ligand_entry` (`id`, `inter_proj_project_id`, `pdb_id`, `chain_id`, `lig_name`, `lig_num`, `lig_icode`, `cluster`, `status_id`) VALUES (3, 1, '3QL8', 'A', 'X02', 500, 'A', NULL, 10);

COMMIT;


-- -----------------------------------------------------
-- Data for table `napoli2`.`inter_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `napoli2`;
INSERT INTO `napoli2`.`inter_type` (`id`, `type`) VALUES (DEFAULT, 'Hydrogen bond');
INSERT INTO `napoli2`.`inter_type` (`id`, `type`) VALUES (DEFAULT, 'Attractive');
INSERT INTO `napoli2`.`inter_type` (`id`, `type`) VALUES (DEFAULT, 'Salt bridge');
INSERT INTO `napoli2`.`inter_type` (`id`, `type`) VALUES (DEFAULT, 'Cation-pi');
INSERT INTO `napoli2`.`inter_type` (`id`, `type`) VALUES (DEFAULT, 'Edge-to-face pi-stacking');
INSERT INTO `napoli2`.`inter_type` (`id`, `type`) VALUES (DEFAULT, 'Face-to-face pi-stacking');
INSERT INTO `napoli2`.`inter_type` (`id`, `type`) VALUES (DEFAULT, 'Parallel-displaced pi-stacking');
INSERT INTO `napoli2`.`inter_type` (`id`, `type`) VALUES (DEFAULT, 'Hydrophobic');
INSERT INTO `napoli2`.`inter_type` (`id`, `type`) VALUES (DEFAULT, 'Halogen bond');
INSERT INTO `napoli2`.`inter_type` (`id`, `type`) VALUES (DEFAULT, 'Repulsive');
INSERT INTO `napoli2`.`inter_type` (`id`, `type`) VALUES (DEFAULT, 'Water-bridged hydrogen bond');
INSERT INTO `napoli2`.`inter_type` (`id`, `type`) VALUES (DEFAULT, 'Pi-stacking');

COMMIT;


-- -----------------------------------------------------
-- Data for table `napoli2`.`proj_step`
-- -----------------------------------------------------
START TRANSACTION;
USE `napoli2`;
INSERT INTO `napoli2`.`proj_step` (`id`, `project_type_id`, `sequence`, `description`, `is_critical`, `is_parallelizable`) VALUES (1, 1, 1, 'Initializing project variables and directories.', 1, NULL);
INSERT INTO `napoli2`.`proj_step` (`id`, `project_type_id`, `sequence`, `description`, `is_critical`, `is_parallelizable`) VALUES (1, 2, 2, 'Initializing project variables and directories.', 1, NULL);
INSERT INTO `napoli2`.`proj_step` (`id`, `project_type_id`, `sequence`, `description`, `is_critical`, `is_parallelizable`) VALUES (1, 3, 3, 'Initializing project variables and directories.', 1, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `napoli2`.`compound_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `napoli2`;
INSERT INTO `napoli2`.`compound_type` (`id`, `type`) VALUES (DEFAULT, 'Aromatic');
INSERT INTO `napoli2`.`compound_type` (`id`, `type`) VALUES (DEFAULT, 'Acceptor');
INSERT INTO `napoli2`.`compound_type` (`id`, `type`) VALUES (DEFAULT, 'Donor');
INSERT INTO `napoli2`.`compound_type` (`id`, `type`) VALUES (DEFAULT, 'Hydrophobe');
INSERT INTO `napoli2`.`compound_type` (`id`, `type`) VALUES (DEFAULT, 'Hydrophobic');
INSERT INTO `napoli2`.`compound_type` (`id`, `type`) VALUES (DEFAULT, 'Negative');
INSERT INTO `napoli2`.`compound_type` (`id`, `type`) VALUES (DEFAULT, 'Positive');
INSERT INTO `napoli2`.`compound_type` (`id`, `type`) VALUES (DEFAULT, 'Negative ionizable');
INSERT INTO `napoli2`.`compound_type` (`id`, `type`) VALUES (DEFAULT, 'Positive ionizable');
INSERT INTO `napoli2`.`compound_type` (`id`, `type`) VALUES (DEFAULT, 'Halogen donor');
INSERT INTO `napoli2`.`compound_type` (`id`, `type`) VALUES (DEFAULT, 'Halogen acceptor');
INSERT INTO `napoli2`.`compound_type` (`id`, `type`) VALUES (DEFAULT, 'Metal');
INSERT INTO `napoli2`.`compound_type` (`id`, `type`) VALUES (DEFAULT, 'Lumped hydrophobe');

COMMIT;


-- -----------------------------------------------------
-- Data for table `napoli2`.`experimental_tech`
-- -----------------------------------------------------
START TRANSACTION;
USE `napoli2`;
INSERT INTO `napoli2`.`experimental_tech` (`id`, `name`) VALUES (1, 'X-RAY');
INSERT INTO `napoli2`.`experimental_tech` (`id`, `name`) VALUES (2, 'NMR');
INSERT INTO `napoli2`.`experimental_tech` (`id`, `name`) VALUES (3, 'ELECTRON MICROSCOPY');
INSERT INTO `napoli2`.`experimental_tech` (`id`, `name`) VALUES (4, 'HYBRID');
INSERT INTO `napoli2`.`experimental_tech` (`id`, `name`) VALUES (5, 'OTHER');

COMMIT;


-- -----------------------------------------------------
-- Data for table `napoli2`.`structure`
-- -----------------------------------------------------
START TRANSACTION;
USE `napoli2`;
INSERT INTO `napoli2`.`structure` (`pdb_id`, `last_update`, `status_id`, `experimental_tech_id`) VALUES ('3QQK', NULL, 8, 1);
INSERT INTO `napoli2`.`structure` (`pdb_id`, `last_update`, `status_id`, `experimental_tech_id`) VALUES ('3QL8', NULL, 8, 1);
INSERT INTO `napoli2`.`structure` (`pdb_id`, `last_update`, `status_id`, `experimental_tech_id`) VALUES ('1C55', NULL, 8, 2);

COMMIT;

